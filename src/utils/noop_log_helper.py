from typing import TYPE_CHECKING, Type

from .log_level import LogLevel
from .log_helper import LogHelper


class NoopLogHelper:
    """a log helper that does nothing"""

    async def flush(self) -> None: ...

    def write(self, msg: str) -> None: ...

    async def blocking_write(self, msg: str) -> None: ...

    def log(self, level: LogLevel, message: str) -> None: ...

    def trace(self, message: str, depth: int = 1) -> None: ...

    def debug(self, message: str, depth: int = 1) -> None: ...

    def info(self, message: str, depth: int = 1) -> None: ...

    def success(self, message: str, depth: int = 1) -> None: ...

    def warning(self, message: str, depth: int = 1) -> None: ...

    def error(self, message: str, depth: int = 1) -> None: ...

    def critical(self, message: str, depth: int = 1) -> None: ...

    def exception(self, exc: BaseException, depth: int = 1) -> None: ...


if TYPE_CHECKING:
    _a: Type[LogHelper] = NoopLogHelper
